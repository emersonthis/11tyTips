const DOM_rootVar__s = var_s => window.getComputedStyle( document.documentElement ).getPropertyValue( var_s ) || ''

const DOM_rootVar__v = ( var_s, val_s ) => document.documentElement.style.setProperty( var_s, val_s )

const DOM_loader__v = ( selector_s, callback__, delay_n=0 ) =>
{
  const iframe_e = document.querySelector( selector_s )
  iframe_e.addEventListener('load', () =>
    {
      iframe_e.before( (iframe_e.contentDocument.body||iframe_e.contentDocument).children[0])
      iframe_e.remove()
      if ( callback__ )
      {
        if ( delay_n ) window.setTimeout( callback__, delay_n )
        else callback__()
      }
    } )
}

const DOM_siblings__a = selector_s =>
{
  const node_e = document.querySelector( selector_s )
  return !node_e ?
    null :
    Array.prototype.filter
      .call( node_e.parentNode.children, sibling_e => sibling_e !== node_e )
}

/**
 * HTML:
 * <ol data--="selector">
 *   <li>primo</li>
 * </ol>
 * JS:
 * DOM_listReverse__v( '[data--="["selector"]' )
 * 
 */
const DOM_listReverse__v = selector_s =>
{
  const nodes_a = Array.prototype.slice.call(document.querySelectorAll( `${selector_s} li` ))
  nodes_a.forEach( node_e => node_e.parentNode.insertBefore( node_e, node_e.parentNode.firstChild ) )
}

const DOM_scroll__v = bottom_b =>
{
  const options_o =
  {
    top: bottom_b ? document.querySelector( 'body' ).offsetHeight : 0,
    left: 0,
    behavior: 'smooth'
  }
  window.scroll( options_o )
}

const DOM_locationKey__s = () =>
{
  const extension_n = '.html'.length
  let location_s = window.location.href
  const key_s = location_s.slice( location_s.lastIndexOf( 'tips/'), -extension_n )
  return key_s
}
/**
 * Service worker registration
 */
const service__v = url_s =>
{
  const REGISTRATION_s = 'ServiceWorker registration'
  const SUCCESS_s = 'successful'
  const FAILURE_s = 'failed'
  
  navigator.serviceWorker.register( url_s )
    .then( registration => console.log(  `${REGISTRATION_s} ${SUCCESS_s} [scope: ${registration.scope}]` ),
           error_o => console.log( `${REGISTRATION_s} ${FAILURE_s} [error: ${error_o}]` ) )
}
const inlineNote__v = click_o =>
{
  const note_e = click_o.target.closest('INS')
  if ( note_e ) note_e.querySelector( '[data--="note_content"]' ).classList.toggle( 'note_open' )
}

//> adjust menu height + position
const menuPosition__v = () =>
{
  const menu_e = document.querySelector( `[data--="menu"]` )
  let position_n = document.querySelector( `[data--="header"]` ).offsetHeight
  position_n += document.querySelector( `[data--="link_page"]` ).offsetHeight
  menu_e.style.transform = `translateY( ${position_n}px)`
  const menu_n = menu_e.offsetHeight
  const article_n = document.querySelector( `[data--="article"]` ).offsetHeight
  if ( menu_n < article_n ) menu_e.style.height = `${article_n * 1.5}px`
}

//> show/hide posts menu list
//> when menu is vsible comments are retracted
const menu__v = () =>
{
  const show_s = DOM_rootVar__s( '--MENU_SHOW' ) === '1' ? '0' : '1'
  DOM_rootVar__v( '--MENU_SHOW', show_s )
  comments_e = document.querySelector( '.utterances' )
  if ( comments_e !== null ) comments_e.classList.toggle( 'retract' )
  const menu_e =document.querySelector( `[data--="menu"]` )
  if ( show_s === '1' )
  {
    menu_e.classList.remove( 'no_pointer' )
    DOM_scroll__v()
  }
  else menu_e.classList.add( 'no_pointer' )
}

//> create the comments script (utteranc.es)
//> show/hide the comments block
const comments__v = () =>
{
  const comments_e = document.querySelector( '[data--="comments"]' )
  if ( !comments_e.hasChildNodes() )
  {
    const script_e = document.createElement( 'script' )
    script_e.setAttribute( 'data--', 'comments_script' )
    script_e.setAttribute( 'src', 'https://utteranc.es/client.js' )
    script_e.setAttribute( 'repo', 'octoxalis/11tytips' )
    script_e.setAttribute( 'issue-term', 't' )
    script_e.setAttribute( 'theme', 'photon-dark' )
    script_e.setAttribute( 'crossorigin', 'anonymous' )
    script_e.setAttribute( 'async', true )
    comments_e.appendChild( script_e )
  }
  comments_e.classList.toggle( 'retract' )
}

//> retrieve previous + next pages info
const linkNear__o = link_s =>
{
  const list_e = document.querySelector( `[data--="menu_list"]` )
  const extension_n = '.html'.length
  const location_s = window.location.pathname.slice( 1, -extension_n )  //: trim '/' at start
  const list_a = document.querySelectorAll( `[data--="menu_list"] > li` )
  if ( !list_a ) return     //: undefined
  const list_n = list_a.length
  const current_e = list_e.querySelector( `[data-link="${location_s}"]` )
  const rank_n = +current_e.getAttribute( 'data-rank' )
  const near_n = ( link_s === 'link_previous' ) ? rank_n - 1 : rank_n + 1
  if ( near_n < 1 || near_n > list_n ) return     //: undefined
  const near_e = list_e.querySelector( `[data-rank="${near_n}"]` )
  if ( !near_e ) return     //: undefined
  const a_e = near_e.querySelector( `span > a` )
  if ( !a_e ) return     //: undefined
  const span_e = near_e.querySelector( `span[data--="note_content"]` )
  if ( !a_e ) return     //: undefined
  return {
    link_s:     near_e.getAttribute( 'data-link' ),
    title_s:    a_e.innerHTML,
    //?? subtitle_s: '',
    abstract_s: span_e.innerHTML,
  }
}

//> insert in DOM previous + next pages info
//> show/hide previous + next pages info block
const linkNear__v = ( event_s, link_e ) =>
{
  if ( link_e === null ) return
  if ( event_s === 'mouseenter' )
  {
    const link_s = link_e.getAttribute( 'data--' )
    let title_s
    let abstract_s
    const near_o = linkNear__o( link_s )
    if ( near_o !== undefined )
    {
      title_s = `<a href="http://127.0.0.1:5500/${near_o.link_s}.html">${near_o.title_s} â¤´</a>`
      abstract_s = `<i>${near_o.abstract_s}</i>`
    }
    else
    {
      title_s = 'No more tip'
      abstract_s = ''
    }
    document.querySelector( '[data--="link_title"]' ).innerHTML = title_s
    document.querySelector( '[data--="link_abstract"]' ).innerHTML = abstract_s
}
  document.querySelector( '[data--="link_info"]' )
    .classList.toggle( 'retract' )
}

//> transform the link_s path part in a full URL
const linkURL__s = link_s =>
{
  const link_o = linkNear__o( link_s )
  return link_o ? `http://127.0.0.1:5500/${link_o.link_s}.html` : undefined
}

/**
 * UI events
 */
void function ()
{
  DOM_loader__v( '[data--="menu_iframe"]', () =>
  {
    //> DOM_rootVar__v( '--c_hue_base', 100 )
//> Menu inline notes sup element click handler
//> to show/hide the note
    window.addEventListener('load', () =>
      {
        document.querySelector( '[data--="menu_list"]' )
          .addEventListener('click', inlineNote__v )
      } )

//> Menu order click handler
//> to sort posts by reverse order
    document.querySelector( '[data--="menu_order"]' )
      .addEventListener('click', click_o =>
      {
        const menu_e = click_o.target.closest('menu')
        if ( menu_e ) DOM_listReverse__v( '[data--="menu_list"]' )
      } )

//> adjust menu height + position
    menuPosition__v()
  } )


//> register service worker
  if ( 'serviceWorker' in navigator ) window
    .addEventListener( 'load', service__v( 'http://127.0.0.1:5500/assets/scripts/js/service_worker.min.js' ) )

//> Page link click+hover handler
//> to show menu or go to another page
  const linkNav_e = document.querySelector( '[data--="link_nav"]' )
  if ( linkNav_e != null )
  {
    linkNav_e.addEventListener('click', click_o => 
    {
      const link_e = click_o.target.closest('LI')
      if ( link_e === null ) return
      let link_s = link_e.getAttribute( 'data--' )
      /*
      if ( link_s === 'link_menu' ) return void menu__v()
      //: previous or next tip
      const http_s = linkURL__s( link_s )
      if ( http_s ) window.location = http_s
      */
      switch ( link_s )
      {
        case ( 'link_menu' ) : return void menu__v()
        case ( 'link_top' ) :
        case ( 'link_bottom' ) : return void DOM_scroll__v( link_s === 'link_bottom' )
        case ( 'link_previous' ) :
        case ( 'link_next' ) :
        {
          const http_s = linkURL__s( link_s )
          if ( http_s ) window.location = http_s
        }
      }
    } )

    document.querySelectorAll( '[data--="link_nav"] > li' )
      .forEach( buttonLink_e =>
      {
        switch ( buttonLink_e.getAttribute( 'data--' ) )
        {
          case 'link_top' :
          case 'link_bottom' :
          case 'link_menu' : return
        }
        [ 'mouseenter', 'mouseleave' ]
          .forEach( event_s => buttonLink_e.addEventListener( event_s,
            mouse_o => linkNear__v( event_s, mouse_o.currentTarget ) ) )
      } )
  }

//> Article inline notes sup element click handler
//> to show/hide notes
  document.querySelector( '[data--="article"]' )
    .addEventListener('click', inlineNote__v )

//> Comments visibility click handler
//> to show/hide comments
  document.querySelector( '[data--="comments_visibility"]' )
    .addEventListener('click', click_o => comments__v() )

//> Easter egg for source reader developers
//> change UI base color
  const header_e = document.querySelector( '[data--="header"]' )
  header_e.addEventListener('click', click_o =>
    {
      const atX_n = click_o.clientX - header_e.getBoundingClientRect().left
      const width_n = header_e.offsetWidth
      const hue_n = ( atX_n / width_n ) * 360
      DOM_rootVar__v( '--c_hue_base', ~~hue_n )
    } )

} ()

