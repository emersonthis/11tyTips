const DOM_rootVar__s = var_s => window.getComputedStyle( document.documentElement ).getPropertyValue( var_s ) || ''

const DOM_rootVar__v = ( var_s, val_s ) => document.documentElement.style.setProperty( var_s, val_s )

const DOM_loader__v = ( selector_s, callback__, delay_n=0 ) =>
{
  const iframe_e = document.querySelector( selector_s )
  iframe_e.addEventListener('load', () =>
    {
      iframe_e.before( (iframe_e.contentDocument.body||iframe_e.contentDocument).children[0])
      iframe_e.remove()
      if ( callback__ )
      {
        if ( delay_n ) window.setTimeout( callback__, delay_n )
        else callback__()
      }
    } )
}

const DOM_siblings__a = selector_s =>
{
  const node_e = document.querySelector( selector_s )
  return !node_e ?
    null :
    Array.prototype.filter
      .call( node_e.parentNode.children, sibling_e => sibling_e !== node_e )
}

/**
 * HTML:
 * <ol data--="selector">
 *   <li>primo</li>
 * </ol>
 * JS:
 * DOM_listReverse__v( '[data--="["selector"]' )
 * 
 */
const DOM_listReverse__v = selector_s =>
{
  const nodes_a = Array.prototype.slice.call(document.querySelectorAll( `${selector_s} li` ))
  nodes_a.forEach( node_e => node_e.parentNode.insertBefore( node_e, node_e.parentNode.firstChild ) )
}

const DOM_scrollToTop__v = () => window.scroll( { top: 0, left: 0, behavior: 'smooth' } )

const DOM_locationKey__s = () =>
{
  const extension_n = '.html'.length
  let location_s = window.location.href
  const key_s = location_s.slice( location_s.indexOf( 'tip'), -extension_n )
  return key_s
}
/**
 * Service worker registration
 */
const service__v = url_s =>
{
  const REGISTRATION_s = 'ServiceWorker registration'
  const SUCCESS_s = 'successful'
  const FAILURE_s = 'failed'
  
  navigator.serviceWorker.register( url_s )
    .then( registration => console.log(  `${REGISTRATION_s} ${SUCCESS_s} [scope: ${registration.scope}]` ),
           error_o => console.log( `${REGISTRATION_s} ${FAILURE_s} [error: ${error_o}]` ) )
}
/**
 * _link_page_.js
 */

let linkNear_a = []    //: [ prev_o, next_o ]


const linkNear__a = link_o =>
{
  if ( link_o === undefined ) return
  const { rank_n } = link_o
  let prev_o
  let next_o
  let link_s, title_s, subtitle_s, abstract_s
  if ( rank_n > 1 )    //: rank_n [ 1..._COLLECTION_a.length ]
  {
    ( { link_s, title_s, subtitle_s, abstract_s } = _COLLECTION_a[rank_n - 2] )
    prev_o = { link_s: link_s, title_s: title_s, subtitle_s: subtitle_s, abstract_s: abstract_s  }
  }
  if ( rank_n < _COLLECTION_a.length )
  {
    ( { link_s, title_s, subtitle_s, abstract_s } = _COLLECTION_a[rank_n] )
    next_o = { link_s: link_s, title_s: title_s, subtitle_s: subtitle_s, abstract_s: abstract_s  }
  }
  linkNear_a = [ prev_o, next_o ]
}

const linkNearShow__v = ( event_s, link_e ) =>
{
  if ( link_e === null ) return
  if ( event_s === 'mouseenter' )
  {
    const link_s = link_e.getAttribute( 'data--' )
    let title_s = 'No more tip'
    //xx let subtitle_s = ''
    let abstract_s = ''
    const near_o = linkNear_a[( link_s === 'link_previous' ) ? 0 : 1]
    if ( near_o === undefined )
    {
      document.querySelector( '[data--=link_title]' ).innerHTML = title_s
      //xx document.querySelector( '[data--=link_subtitle]' ).innerHTML = subtitle_s
      document.querySelector( '[data--=link_abstract]' ).innerHTML = abstract_s
    }
    else
    {
      document.querySelector( '[data--=link_title]' ).innerHTML = `<a href="http://127.0.0.1:5500/${near_o.link_s}.html">${near_o.title_s} â¤´</a>`
      //xx document.querySelector( '[data--=link_subtitle]' ).innerHTML = near_o.subtitle_s
      document.querySelector( '[data--=link_abstract]' ).innerHTML = `<i>${near_o.abstract_s}</i>`
    }
  }
  document.querySelector( '[data--=link_info]' )
    .classList.toggle( 'retract' )
}


const linkPage__a = ( key_s, collection_a ) =>
{
  const link_o = collection_a.find( link_o => link_o.link_s === key_s )
  if ( link_o )
  {
    const at_n = link_o.rank_n    //: rank_n [ 1..._COLLECTION_a.length ]
    const prev_n = at_n ? at_n - 1 : null
    const next_n = ( at_n < collection_a.length ) ? at_n + 1 : null
    return [ prev_n, next_n ]
  }
  return []
}

const linkPageURL__s = ( link_s, collection_a ) =>
{
  const [ prev_n, next_n ] = linkPage__a( DOM_locationKey__s(), collection_a )
  let index_n = ( ( link_s === 'link_previous' ) ? prev_n : next_n ) - 1    //: rank_n [ 1..._COLLECTION_a.length ]
  return ( index_n < 0 ) ? '' : `${_URL_s}${collection_a[index_n].link_s}.html`
}


const linkPage__o = () =>
{
  if ( _COLLECTION_a === null ) _COLLECTION_a = JSON.parse( document.querySelector('[data--=collection_a]').innerHTML )
  if ( !_COLLECTION_a ) return null
  const extension_n = '.html'.length
  const location_s = window.location.pathname.slice( 1, -extension_n )  //: trim '/' at start
  return _COLLECTION_a.find( link_o => link_o.link_s === location_s )
}

const linkPage__v = () => linkNear__a( linkPage__o() )
const inlineNote__v = click_o =>
{
  const note_e = click_o.target.closest('ins')
  if ( note_e ) note_e.querySelector( '[data--=note_content]' ).classList.toggle( 'note_open' )
}

const menuPosition__v = () =>
{
  const menu_e = document.querySelector( `[data--=menu]` )
  const header_n = document.querySelector( `[data--=header]` ).offsetHeight
  const linkPage_n = document.querySelector( `[data--=link_page]` ).offsetHeight
  menu_e.style.transform = `translateY( ${header_n + linkPage_n}px)`
  const menu_n = menu_e.offsetHeight
  const article_n = document.querySelector( `[data--=article]` ).offsetHeight
  if ( menu_n < article_n ) menu_e.style.height = `${article_n * 1.5}px`
}

/**
 * UI events
 */
void function ()
{
  //: load
  DOM_loader__v( '[data--=menu_iframe]', () =>
  {
    window
      .addEventListener('load', () =>
      {
        menuPosition__v()

//: Menu inline notes sup element click handler
//: to show/hide the note

        document.querySelector( '[data--=menu_list]' )
          .addEventListener('click', inlineNote__v )

//: Register service worker

        if ( 'serviceWorker' in navigator ) window
          .addEventListener( 'load', service__v( 'http://127.0.0.1:5500/assets/scripts/js/service_worker.min.js' ) )

//: Register posts list
        linkPage__v()
      } )

/**
 * Menu order click handler
 * to sort posts by reverse order
 */
    document.querySelector( '[data--=menu_order]' )
      .addEventListener('click', click_o =>
      {
        const menu_e = click_o.target.closest('menu')
        if ( menu_e ) DOM_listReverse__v( '[data--="menu_list"]' )
      } )
  } )

  //: click
/**
 * Show/hide posts list
 */
  const menu__v = () =>
  {
    const show_s = DOM_rootVar__s( '--MENU_SHOW' ) === '1' ? '0' : '1'
    DOM_rootVar__v( '--MENU_SHOW', show_s )
    comments_e = document.querySelector( '.utterances' )
    if ( comments_e !== null ) comments_e.classList.toggle( 'retract' )
    const menu_e =document.querySelector( `[data--=menu]` )
    if ( show_s === '1' )
    {
      menu_e.classList.remove( 'no_pointer' )
      DOM_scrollToTop__v()
    }
    else menu_e.classList.add( 'no_pointer' )
  }

/**
 * Page link click+hover handler
 * to show menu or go to another page
 */
  const linkNav_e = document.querySelector( '[data--=link_nav]' )
  if ( linkNav_e != null )
  {
    linkNav_e.addEventListener('click', click_o => 
    {
      const link_e = click_o.target.closest('LI')
      if ( link_e === null ) return
      let link_s = link_e.getAttribute( 'data--' )
      if ( link_s === 'link_menu' ) return void menu__v()
      //: previous or next tip
      const http_s = linkPageURL__s( link_s, _COLLECTION_a )
      if ( http_s ) window.location = http_s
    } )

    document.querySelectorAll( '[data--=link_nav] > li' )
      .forEach( buttonLink_e =>
      {
        if ( buttonLink_e.getAttribute( 'data--' ) === 'link_menu' ) return
        [ 'mouseenter', 'mouseleave' ]
          .forEach( event_s => buttonLink_e.addEventListener( event_s,
            mouse_o => linkNearShow__v( event_s, mouse_o.currentTarget ) ) )
      } )
  }

/**
 * Article inline notes sup element click handler
 * to show/hide notes
 */
  document.querySelector( '[data--=article]' )
    .addEventListener('click', inlineNote__v )

/**
 * Comments visibility click handler
 * to show/hide comments
 */
  document.querySelector( '[data--=comments_visibility]' )
  .addEventListener('click', click_o =>
  {
    document.querySelector( '[data--=comments]' )
      .classList.toggle( 'retract' )
  } )

} ()

